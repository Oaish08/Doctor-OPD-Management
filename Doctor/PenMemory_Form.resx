<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer_toclose.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADBs3wAg3dlAI6CagAAAAAAuK2WIrKne2Khll2eiYA8nYuD
        NZ2NgzWdjoQznZWNO52Yk0edoqJgnrO2eWK2upEiWVYDAMC4lgCpo3oAxrmRAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAn5JmAKygcgAQAQAAm49xDaSVb3yhj17bnIhJ+J6J
        Pf+dhzb/mog4/5iINf+gkTn/pphB/6SZRf+gmEv/oZlU+KWfY9uuqXOAwbmWIlxWMwC5r4oAsaeBAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIFwPACOgFMApZp4A66ha3GUhkrFkoBB/JyF
        Ov+jhjb/poQ3/6iCOv+igUT/po1F/62WSP+sk03/q5RL/6uWSv+qj1P/pJNO/6edWP+vo3Dduq6Jcaed
        iwK/uZAAxMCYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACHdj4Ag3I9AGtdQgKGelF3loJC+ZV/
        NP+chTL/n4cx/56FNf+cgD7/nYFJ/6aJT/+rmEf/pZZF/6aSVv+lk0//qJlD/62UTv+sk07/rpxP/66h
        WP+ro2L3q6dwi8rFoB/Fv5gAtq6HAAAAAAAAAAAAAAAAAAAAAAAAAAAAeG5GAH9yQgCGdj0ChHQ9dIx7
        P/iZej3/nXw6/5+DOf+dhTb/mIU1/5eJPf+bkUn/p5JP/6eaQf+elkj/xbmR/8O4hP+hmkD/p5ZI/6uR
        Uv+vmVL/saNQ/62mT/+qpWD/sKp9wMe/oCHQzJkA4OCZAAAAAAAAAAAAAAAAAKybXwCOg1YAEy91AoJ0
        Q3KNezf3l4Er/5Z+N/+Yfzv/nII9/52DPP+giT7/pJNE/6WXRv+sk0//p5hC/6GVWP/n3Nb/3NC6/5yV
        SP+llE//ppBT/6qYUv+woVT/sKJT/6yhWf+upm3/xL+NvuXlpx/V1JwAuLmNAAAAAAC0qJAAvq58AP/z
        rwOPgU9vindC9pZ9M/+dhSb/lYQt/5WENP+YhTn/oodB/6+PSv+ukkv/qJNH/6yUSP+rl0D/saJr//ft
        7//g18P/ophM/6eWTP+llE7/qZlQ/6+dWP+wnl3/uqtr/8K4d//CvHr/x8WFiPrnZAC+wJUA0M6sAKWX
        gAChk2AAp5tsTJiGQvWaezf/m3k6/5aAL/+agDL/mII4/5yOQf+lkEX/rpFM/6mPS/+glUT/opdD/6mO
        R//HtY//+vn7/+Tjxv+smFT/p5VL/6aUTP+rmE3/r59Z/7yvbf/CuHj/w7h4/8S4d/+8tn7htraPLq6s
        fwDLxqEAraCLALOmnQmShVazkYA0/5p9Mv+aejj/ln4x/5eCM/+kikX/qJNK/6SXT/+0pHX/pZBk/6iW
        Rf+nl0j/qZVK/9/Qtf/x8+j/6+jQ/7KgXf+nlUv/p5RO/7GeVf/EtXD/xbl3/8K4eP/DuHj/xbh2/7+4
        fP+8u4yy0M2uCM7KqACZjGcAl4pmOYx+RfSSgi3/l4At/5d8Nf+WfDT/nIo7/7WXVf+1mFT/sq1s/+zt
        1v/Bs6L/tJlN/7CbUv+zpVz/7OLO/73Cnf/q5NH/tqlo/6ybUP+rl1T/v65n/8m6d//EuXj/wrh5/8O4
        d//FuHb/w7p1/766fvbIwphKw72QAHZjEgCJeUeAkH01/5SBKv+Ugi3/lX8y/5l9N/+biz3/sZJP/7eX
        WP/FwY3/9/zx/+bg1f++omH/r5dW/7+3d//p487/q650/+jk0/+4sXX/qplN/6+aWv/EtG//x7t4/8S5
        ev/DuXr/w7l4/8a5d//HvXL/w7x2/8K8i595WgAAs6qCJJaGStuZfy7/m4Ex/5ODMv+TgjL/nX43/6CM
        QP+njUT/rJBV/9vRq//X2sT/4uPK/9S/k/+rll3/0Mmc/9nVtv+mo17/6OHO/766hf+rmk//tqFi/8i5
        d//EuXj/w7l6/8K5ev/Funn/x7p4/8m8c//HvXb/v7mF2cbCmiSVilw8lYM88aKDLf+dfDj/j384/5GD
        L/+ggTb/p4tD/6KQPP+jj1b/597G/726jv+/wIj/6+LL/7Sgcf/k2sL/wsWU/6adVP/p2sP/xMKT/6qZ
        UP+/qmr/xLd2/8K4ef/Bt3r/wrl5/8S4d//Junf/y7t5/8e6ev+/u4LxvLqLPK2keo6UhDn/ooIu/598
        Rf+UhEn/loo//6eLR/+wk1L/pZhJ/7Cjcf/v487/s6hq/6uqW//j38r/5dm0//Hm2f+usnP/qJtT/+TU
        tf/QzaT/rZxW/8i2e//VzJL/1MyT/9TLlf/Xzpf/182S/8q8fP/Jt3r/yLl9/8C8gf/HyJiOoZVin5CE
        Ov+RgDX/x7WL/+fhwf/k4cD/597I/+jiwv/o4cb/8ejT/9/Zsf+alU7/oppS/8e7jf/6++z/6eHT/7Kf
        ZP+pmVb/1NKj/9jRuf+xn2P/2ta1//Pz4v/x7tP/8ezT//Ht2P/v687/zMaP/8S4ev/IvHb/xLt4/8O7
        j5+eiVuelIE5/5mCM/+qkFr/sqNw/7Cmbv+4qXr/t6t3/7mofv+7poL/q5pg/56RQv+ikkX/s5xi/+bg
        w//Wya7/sppb/6uXVv/KyJj/3djC/7iqbf/r5cL/2dW8/8K4jP/FuYv/wbaO/8G3i//Funv/yLl5/8a6
        c//CuXb/v7aMnp2EW56Vfzj/n4Mu/5x7N/+VfTb/k4Mw/5+IPv+fiT3/oohG/6KFSv+ki0P/p5I8/6aQ
        Pv+pjkz/sqhw/7Wjcv+2nFf/r5lY/8W+jv/m4Mn/v7h6/+7rxf/TzKf/wrd1/8W5cf/DuHj/wrZ5/8m5
        c//JuXb/yLx1/8jAfv/Fu5OeoZFmoJCBN/+ehS3/nn01/5l/Nf+bhjP/pYtA/6eOPP+njT//potE/6aN
        Qv+mjz7/po9C/6aNSf+ilUn/sZxa/7qgVv+znFv/wLOD/+7n0f/ExIz/8fHL/8zFm//Cu3H/xb9r/8O9
        c//Bunf/ybx1/82/e//Nw3v/zMSD/8nAm6CUkGFnh4E3+JeDLf+cfTn/mH46/5uFPP+hiEf/o4w//6ON
        QP+jjEP/o4tF/6KMRv+ijEf/oo1I/6OSPv+slEz/uaBU/7KdWf+6q3r/7ejW/8nLov/u79L/wLyT/766
        cv/Bvm3/v753/8K/gP/Kwn7/zcKA/8zCe//Kw4L4y8OaZ3t5SzGGfzzulX8v/51+O/+Xfzr/m4g9/5+I
        Rv+gikP/oYtC/6KLQ/+jikf/oolI/6OLRv+kjkL/pZE8/6SMR/+rmU3/r55X/7Wncf/s59n/0NK7/+vq
        0v+9uIr/w7x3/8jBeP/EwID/wr+D/8nDff/LwX3/ysJ6/8nDge7FvosxmZRyD5CBQr2ZfjP/oH04/5uB
        Nf+ejTb/oYw9/6KJQ/+iikL/o4pB/6WJRP+miUb/qItC/6mPO/+okT3/ootK/5+PRf+mmU//tqhu//Dp
        3P/w8uf/7OrO/8a8hv/NwXv/zsF7/8q/gv/Hv4L/zcR4/8zCev/Kw3v/yMN+vNDJnA+TdzIAmYRMf5x8
        Nf+dfDP/lYA7/5mJP/+hjDr/ooo//6KKQP+iikD/o4tB/6SLQv+ljEL/po5A/6qPRP+okkL/p5BI/6mT
        T/+9q2f/8+jS//7/+//s57//yL58/8rCef/Kwnf/ycJ7/8nAfv/Kv3//ycR5/8TDe//HxJOds61aAJJ8
        SACTfUsllXw835h+Mv+dhzr/oo1C/6WPQ/+nkEX/qZJH/6uUSf+tlkv/rpdM/6+YTf+xmk//tplU/7eh
        Tv+0nlX/uKFd/8CvZf/r4sj//f/+/+Dbsv/Fu3n/x757/8e+ef/Iv3v/yL98/8i9f//GwXr/wsKC9sjF
        m0q/vIoApGgWAJR6KACKfEeFmIQ7/6+ROP+zl0L/q5ZP/66YT/+xmk//sZpP/7KbUP+ym1D/sptQ/7Oc
        Uf+4mVj/tZ9P/7WjV/+5qV3/uK5e/+Davv/7/f//1dGn/8G2dv/Et3r/x7l8/8q7fP/KvHv/y796/8S+
        fv/Bv42z08+lCNTRpgCKe0oAqKR5AKqnf0Sik1X0ro40/7SUPf+plFD/rJZN/6+YTf+wmU7/sJlO/7CZ
        Tv+ym1D/s5xR/7aYWf+3olP/u6xe/7msXf+1rln/19Gw//j59//Nypv/w7lx/8a4dv/Ht3b/x7h2/8a6
        dP/GvHL/wb2E9MXDokzEwZ4A0s+hAAAAAADJxJ0A9v/5A6WVXm+kikL2qo5A/6iSTf+rlUv/rZZL/6+Y
        Tf+vmE3/sJlO/7GaT/+xmk//t5tZ/7uqWf+5rGD/ua1f/7evWP/Wy6L/9vTl/8nGjf/Gvm7/yb1w/8m9
        cf/Hu3L/w7x2/7+7d/rBv4Fy09n9A8rKqwDPzKAAAAAAALmyiwChmG4AVUsxApaETnKah0j2ppBF/6yV
        Sf+slUr/rZZL/66XTP+ul0z/rpdM/7WdU/++p1//vK9a/7apYf+4qWH/vrJc/9DBjP/v68j/xcCA/8i/
        cf/LwG7/y8Bv/8e+dv/AuoL/x8WUt9jWmw7OzZwAxMWnAAAAAAAAAAAAAAAAAIt+UgCEelMAc3p4A6GU
        XJmmjz77q5NF/6uUSf+slUr/rZZL/62VS/+znFH/v6hd/8GsX/+5rlX/tKdi/72raf/Fs1//x7Jz/8m+
        hf/Btnf/ybp2/8u/cP/LwXD/xr9+/8W/lMDRzrAhx8ScAMG/iQAAAAAAAAAAAAAAAAAAAAAAAAAAAIB4
        UwBsWiEAxLV2DaKPT3mnk1L3qZRL/6uVR/+sl0T/sZxI/76rWf++rV3/uqlb/7iqWP+7rGL/wa9n/8Wz
        Yv/Dr2b/wbBn/8W5af/GvG3/w7t0/8O9gvbHwYyL3NWqH9LNpQDBvpoAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAB8AAACvo3MApau+Ba2dZFGhk1u8oZJS/amZTf+7qFb/wK1a/72rWf+7qVn/vatc/8Gw
        YP/CsWH/wrFi/8KxYv/EsmP/wbdo/764cPi9t364wr+VT8nO3ATSzaQA1tCcAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAzMzMAKmdcwCqn3gArZdSAKWfdg+po3d6r6Vvv7aoaPC4pWH/uaRd/7uo
        Xf+/rWL/vq5k/7ytZP+8rWb/vrBr/7+yavC6sHa5vbWDUc/FkwvBvYwAzMmoAMjFogAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////AOzruQB/cTsApJpmAINwIgDGvZAQu656Pruu
        fpGunmudsaJonbOlaZ2xpGqdsKVvnbGnc52/toORxrt8Pcy9fw/BuHIAzsWOAM7FiwDLxZwAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/AAAP/gAAB/wAAAP4AAAB8AAAAOAAAABAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAA
        AACAAAABwAAAA+AAAAfwAAAP8AAAH/gAAD8=
</value>
  </data>
</root>